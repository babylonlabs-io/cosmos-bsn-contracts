{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "BtcDelegationsResponse",
  "type": "object",
  "required": [
    "delegations"
  ],
  "properties": {
    "delegations": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/BtcDelegation"
      }
    }
  },
  "additionalProperties": false,
  "definitions": {
    "BtcDelegation": {
      "type": "object",
      "required": [
        "btc_pk_hex",
        "covenant_sigs",
        "delegator_slashing_sig",
        "end_height",
        "fp_btc_pk_list",
        "params_version",
        "slashed",
        "slashing_tx",
        "staker_addr",
        "staking_output_idx",
        "staking_tx",
        "start_height",
        "total_sat",
        "unbonding_time",
        "undelegation_info"
      ],
      "properties": {
        "btc_pk_hex": {
          "description": "Bitcoin secp256k1 PK of the BTC delegator. The PK follows encoding in BIP-340 spec in hex format",
          "type": "string"
        },
        "covenant_sigs": {
          "description": "List of adaptor signatures on the slashing tx by each covenant member. It will be a part of the witness for the staking tx output.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CovenantAdaptorSignatures"
          }
        },
        "delegator_slashing_sig": {
          "description": "Signature on the slashing tx by the delegator (i.e. SK corresponding to btc_pk) as string hex. It will be a part of the witness for the staking tx output.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0.0
          }
        },
        "end_height": {
          "description": "End height of the BTC delegation. It is the end BTC height of the time-lock - w",
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        },
        "fp_btc_pk_list": {
          "description": "List of BIP-340 PKs of the finality providers that this BTC delegation delegates to.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "params_version": {
          "description": "Params version used to validate the delegation.",
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        },
        "slashed": {
          "description": "Whether a given delegation is related to a slashed FP.",
          "type": "boolean"
        },
        "slashing_tx": {
          "description": "Slashing tx in raw bytes.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0.0
          }
        },
        "staker_addr": {
          "description": "Address to receive rewards from BTC delegation.",
          "type": "string"
        },
        "staking_output_idx": {
          "description": "Index of the staking output in the staking tx",
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        },
        "staking_tx": {
          "description": "Staking tx in raw bytes.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0.0
          }
        },
        "start_height": {
          "description": "Start height of the BTC delegation. It is the start BTC height of the time-lock",
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        },
        "total_sat": {
          "description": "Total BTC stakes in this delegation, quantified in satoshi.",
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "unbonding_time": {
          "description": "unbonding_time is used in unbonding output time-lock path and in slashing transactions change outputs",
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        },
        "undelegation_info": {
          "description": "Undelegation info of this delegation.",
          "allOf": [
            {
              "$ref": "#/definitions/BtcUndelegationInfo"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "BtcUndelegationInfo": {
      "type": "object",
      "required": [
        "covenant_slashing_sigs",
        "covenant_unbonding_sig_list",
        "delegator_slashing_sig",
        "slashing_tx",
        "unbonding_tx"
      ],
      "properties": {
        "covenant_slashing_sigs": {
          "description": "List of adaptor signatures on the unbonding slashing tx by each covenant member. It will be a part of the witness for the staking tx output.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CovenantAdaptorSignatures"
          }
        },
        "covenant_unbonding_sig_list": {
          "description": "List of signatures on the unbonding tx by covenant members.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SignatureInfo"
          }
        },
        "delegator_slashing_sig": {
          "description": "Signature on the slashing tx by the delegator (i.e. SK corresponding to btc_pk). It will be a part of the witness for the unbonding tx output.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0.0
          }
        },
        "delegator_unbonding_info": {
          "description": "Signature on the unbonding tx by the delegator (i.e. SK corresponding to btc_pk). It effectively proves that the delegator wants to unbond and thus Babylon will consider this BTC delegation unbonded. Delegator's BTC on Bitcoin will be unbonded after time-lock.",
          "anyOf": [
            {
              "$ref": "#/definitions/DelegatorUnbondingInfo"
            },
            {
              "type": "null"
            }
          ]
        },
        "slashing_tx": {
          "description": "Unbonding slashing tx.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0.0
          }
        },
        "unbonding_tx": {
          "description": "Transaction which will transfer the funds from staking output to unbonding output. Unbonding output will usually have lower timelock than staking output.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0.0
          }
        }
      },
      "additionalProperties": false
    },
    "CovenantAdaptorSignatures": {
      "type": "object",
      "required": [
        "adaptor_sigs",
        "cov_pk"
      ],
      "properties": {
        "adaptor_sigs": {
          "description": "adaptor_sigs is a list of adaptor signatures, each encrypted by a restaked BTC finality provider's public key",
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            }
          }
        },
        "cov_pk": {
          "description": "cov_pk is the public key of the covenant emulator, used as the public key of the adaptor signature",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0.0
          }
        }
      },
      "additionalProperties": false
    },
    "DelegatorUnbondingInfo": {
      "type": "object",
      "required": [
        "spend_stake_tx"
      ],
      "properties": {
        "spend_stake_tx": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0.0
          }
        }
      },
      "additionalProperties": false
    },
    "SignatureInfo": {
      "type": "object",
      "required": [
        "pk",
        "sig"
      ],
      "properties": {
        "pk": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0.0
          }
        },
        "sig": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0.0
          }
        }
      },
      "additionalProperties": false
    }
  }
}
