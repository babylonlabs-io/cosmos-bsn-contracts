{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "description": "btc_staking execution handlers",
  "oneOf": [
    {
      "description": "Change the admin",
      "type": "object",
      "required": [
        "update_admin"
      ],
      "properties": {
        "update_admin": {
          "type": "object",
          "properties": {
            "admin": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Set the BTC light client addr and BTC finality addr. Only admin or the babylon contract can set this",
      "type": "object",
      "required": [
        "update_contract_addresses"
      ],
      "properties": {
        "update_contract_addresses": {
          "type": "object",
          "required": [
            "btc_light_client",
            "finality"
          ],
          "properties": {
            "btc_light_client": {
              "type": "string"
            },
            "finality": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "BTC Staking operations",
      "type": "object",
      "required": [
        "btc_staking"
      ],
      "properties": {
        "btc_staking": {
          "type": "object",
          "required": [
            "active_del",
            "new_fp",
            "slashed_del",
            "unbonded_del"
          ],
          "properties": {
            "active_del": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ActiveBtcDelegation"
              }
            },
            "new_fp": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NewFinalityProvider"
              }
            },
            "slashed_del": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SlashedBtcDelegation"
              }
            },
            "unbonded_del": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UnbondedBtcDelegation"
              }
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Slash finality provider staking power. Used by the babylon-contract only. The Babylon contract will call this message to set the finality provider's staking power to zero when the finality provider is found to be malicious by the finality contract.",
      "type": "object",
      "required": [
        "slash"
      ],
      "properties": {
        "slash": {
          "type": "object",
          "required": [
            "fp_btc_pk_hex"
          ],
          "properties": {
            "fp_btc_pk_hex": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "ActiveBtcDelegation": {
      "description": "Message sent when a BTC delegation newly receives covenant signatures and thus becomes active.",
      "type": "object",
      "required": [
        "btc_pk_hex",
        "covenant_sigs",
        "delegator_slashing_sig",
        "end_height",
        "fp_btc_pk_list",
        "params_version",
        "slashing_tx",
        "staker_addr",
        "staking_output_idx",
        "staking_tx",
        "start_height",
        "total_sat",
        "unbonding_time",
        "undelegation_info"
      ],
      "properties": {
        "btc_pk_hex": {
          "description": "Bitcoin secp256k1 PK of the BTC delegator. The PK follows encoding in BIP-340 spec in hex format",
          "type": "string"
        },
        "covenant_sigs": {
          "description": "List of adaptor signatures on the slashing tx by each covenant member. It will be a part of the witness for the staking tx output.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CovenantAdaptorSignatures"
          }
        },
        "delegator_slashing_sig": {
          "description": "Signature on the slashing tx by the delegator (i.e. SK corresponding to btc_pk) as string hex. It will be a part of the witness for the staking tx output.",
          "allOf": [
            {
              "$ref": "#/definitions/Binary"
            }
          ]
        },
        "end_height": {
          "description": "End height of the BTC delegation. It is the end BTC height of the time-lock - w",
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        },
        "fp_btc_pk_list": {
          "description": "List of BIP-340 PKs of the finality providers that this BTC delegation delegates to",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "params_version": {
          "description": "Params version used to validate the delegation",
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        },
        "slashing_tx": {
          "description": "Slashing tx.",
          "allOf": [
            {
              "$ref": "#/definitions/Binary"
            }
          ]
        },
        "staker_addr": {
          "description": "Address to receive rewards from BTC delegation.",
          "type": "string"
        },
        "staking_output_idx": {
          "description": "Index of the staking output in the staking tx",
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        },
        "staking_tx": {
          "description": "Staking tx.",
          "allOf": [
            {
              "$ref": "#/definitions/Binary"
            }
          ]
        },
        "start_height": {
          "description": "Start BTC height of the BTC delegation. It is the start BTC height of the time-lock",
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        },
        "total_sat": {
          "description": "Total BTC stakes in this delegation, quantified in satoshi",
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "unbonding_time": {
          "description": "Used in unbonding output time-lock path and in slashing transactions change outputs",
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        },
        "undelegation_info": {
          "description": "Undelegation info of this delegation.",
          "allOf": [
            {
              "$ref": "#/definitions/BtcUndelegationInfo"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>. See also <https://github.com/CosmWasm/cosmwasm/blob/main/docs/MESSAGE_TYPES.md>.",
      "type": "string"
    },
    "BtcUndelegationInfo": {
      "description": "Provides all necessary info about the undelegation.",
      "type": "object",
      "required": [
        "covenant_slashing_sigs",
        "covenant_unbonding_sig_list",
        "delegator_slashing_sig",
        "slashing_tx",
        "unbonding_tx"
      ],
      "properties": {
        "covenant_slashing_sigs": {
          "description": "List of adaptor signatures on the unbonding slashing tx by each covenant member It will be a part of the witness for the staking tx output.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CovenantAdaptorSignatures"
          }
        },
        "covenant_unbonding_sig_list": {
          "description": "List of signatures on the unbonding tx by covenant members",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SignatureInfo"
          }
        },
        "delegator_slashing_sig": {
          "description": "Signature on the slashing tx by the delegator (i.e. SK corresponding to btc_pk). It will be a part of the witness for the unbonding tx output.",
          "allOf": [
            {
              "$ref": "#/definitions/Binary"
            }
          ]
        },
        "delegator_unbonding_info": {
          "description": "Information about transaction which spent the staking output",
          "anyOf": [
            {
              "$ref": "#/definitions/DelegatorUnbondingInfo"
            },
            {
              "type": "null"
            }
          ]
        },
        "slashing_tx": {
          "description": "Unbonding slashing tx",
          "allOf": [
            {
              "$ref": "#/definitions/Binary"
            }
          ]
        },
        "unbonding_tx": {
          "description": "Transaction which will transfer the funds from staking output to unbonding output. Unbonding output will usually have lower timelock than staking output.",
          "allOf": [
            {
              "$ref": "#/definitions/Binary"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "CovenantAdaptorSignatures": {
      "description": "Represents a list adaptor signatures signed by the covenant with different finality provider's public keys as encryption keys",
      "type": "object",
      "required": [
        "adaptor_sigs",
        "cov_pk"
      ],
      "properties": {
        "adaptor_sigs": {
          "description": "List of adaptor signatures, each encrypted by a restaked BTC finality provider's public key",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Binary"
          }
        },
        "cov_pk": {
          "description": "Public key of the covenant emulator, used as the public key of the adaptor signature",
          "allOf": [
            {
              "$ref": "#/definitions/Binary"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "Decimal": {
      "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
      "type": "string"
    },
    "DelegatorUnbondingInfo": {
      "type": "object",
      "required": [
        "spend_stake_tx"
      ],
      "properties": {
        "spend_stake_tx": {
          "$ref": "#/definitions/Binary"
        }
      },
      "additionalProperties": false
    },
    "FinalityProviderDescription": {
      "type": "object",
      "required": [
        "details",
        "identity",
        "moniker",
        "security_contact",
        "website"
      ],
      "properties": {
        "details": {
          "description": "Details of the finality provider.",
          "type": "string"
        },
        "identity": {
          "description": "Identity of the finality provider.",
          "type": "string"
        },
        "moniker": {
          "description": "Name of the finality provider.",
          "type": "string"
        },
        "security_contact": {
          "description": "Security contact of the finality provider.",
          "type": "string"
        },
        "website": {
          "description": "Website of the finality provider.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "NewFinalityProvider": {
      "type": "object",
      "required": [
        "addr",
        "btc_pk_hex",
        "commission",
        "consumer_id"
      ],
      "properties": {
        "addr": {
          "description": "Bech32 address identifier of the finality provider.",
          "type": "string"
        },
        "btc_pk_hex": {
          "description": "Bitcoin secp256k1 PK of this finality provider the PK follows encoding in BIP-340 spec in hex format",
          "type": "string"
        },
        "commission": {
          "description": "Commission rate of the finality provider.",
          "allOf": [
            {
              "$ref": "#/definitions/Decimal"
            }
          ]
        },
        "consumer_id": {
          "description": "ID of the consumer that the finality provider is operating on.",
          "type": "string"
        },
        "description": {
          "description": "Description terms for the finality provider.",
          "anyOf": [
            {
              "$ref": "#/definitions/FinalityProviderDescription"
            },
            {
              "type": "null"
            }
          ]
        },
        "pop": {
          "description": "Proof of possession of the babylon_pk and btc_pk",
          "anyOf": [
            {
              "$ref": "#/definitions/ProofOfPossessionBtc"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "ProofOfPossessionBtc": {
      "description": "Proof of possession that a Babylon secp256k1 secret key and a Bitcoin secp256k1 secret key are held by the same person.",
      "type": "object",
      "required": [
        "btc_sig",
        "btc_sig_type"
      ],
      "properties": {
        "btc_sig": {
          "description": "Signature generated via sign(sk_btc, babylon_sig).\n\nThe signature follows encoding in either BIP-340 spec or BIP-322 spec.",
          "allOf": [
            {
              "$ref": "#/definitions/Binary"
            }
          ]
        },
        "btc_sig_type": {
          "description": "Type of `btc_sig` in the pop.",
          "type": "integer",
          "format": "int32"
        }
      },
      "additionalProperties": false
    },
    "SignatureInfo": {
      "description": "A BIP-340 signature together with its signer's BIP-340 PK.",
      "type": "object",
      "required": [
        "pk",
        "sig"
      ],
      "properties": {
        "pk": {
          "$ref": "#/definitions/Binary"
        },
        "sig": {
          "$ref": "#/definitions/Binary"
        }
      },
      "additionalProperties": false
    },
    "SlashedBtcDelegation": {
      "description": "A packet sent from Babylon to the Consumer chain about a slashed BTC delegation re-staked to >=1 of the Consumer chain's finality providers",
      "type": "object",
      "required": [
        "recovered_fp_btc_sk",
        "staking_tx_hash"
      ],
      "properties": {
        "recovered_fp_btc_sk": {
          "description": "Extracted BTC SK of the finality provider on this Consumer chain.",
          "type": "string"
        },
        "staking_tx_hash": {
          "description": "Staking tx hash of the BTC delegation. It uniquely identifies a BTC delegation",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "UnbondedBtcDelegation": {
      "description": "Sent from Babylon to the Consumer chain upon an early unbonded BTC delegation.",
      "type": "object",
      "required": [
        "staking_tx_hash",
        "unbonding_tx_sig"
      ],
      "properties": {
        "staking_tx_hash": {
          "description": "Staking tx hash of the BTC delegation. It uniquely identifies a BTC delegation",
          "type": "string"
        },
        "unbonding_tx_sig": {
          "description": "Signature on the unbonding tx signed by the BTC delegator It proves that the BTC delegator wants to unbond",
          "allOf": [
            {
              "$ref": "#/definitions/Binary"
            }
          ]
        }
      },
      "additionalProperties": false
    }
  }
}
